// Code generated by protoc-gen-go. DO NOT EDIT.
// source: poll.proto

package pollpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreatePollRequest struct {
	CreatorId            string    `protobuf:"bytes,1,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	Title                string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AllowedUniqueVotes   int32     `protobuf:"varint,3,opt,name=allowedUniqueVotes,proto3" json:"allowedUniqueVotes,omitempty"`
	Options              []*Option `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreatePollRequest) Reset()         { *m = CreatePollRequest{} }
func (m *CreatePollRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePollRequest) ProtoMessage()    {}
func (*CreatePollRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_poll_0ffb0f04c83eab61, []int{0}
}
func (m *CreatePollRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePollRequest.Unmarshal(m, b)
}
func (m *CreatePollRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePollRequest.Marshal(b, m, deterministic)
}
func (dst *CreatePollRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePollRequest.Merge(dst, src)
}
func (m *CreatePollRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePollRequest.Size(m)
}
func (m *CreatePollRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePollRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePollRequest proto.InternalMessageInfo

func (m *CreatePollRequest) GetCreatorId() string {
	if m != nil {
		return m.CreatorId
	}
	return ""
}

func (m *CreatePollRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreatePollRequest) GetAllowedUniqueVotes() int32 {
	if m != nil {
		return m.AllowedUniqueVotes
	}
	return 0
}

func (m *CreatePollRequest) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

type CreatePollReply struct {
	Poll                 *Poll    `protobuf:"bytes,1,opt,name=poll,proto3" json:"poll,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePollReply) Reset()         { *m = CreatePollReply{} }
func (m *CreatePollReply) String() string { return proto.CompactTextString(m) }
func (*CreatePollReply) ProtoMessage()    {}
func (*CreatePollReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_poll_0ffb0f04c83eab61, []int{1}
}
func (m *CreatePollReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePollReply.Unmarshal(m, b)
}
func (m *CreatePollReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePollReply.Marshal(b, m, deterministic)
}
func (dst *CreatePollReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePollReply.Merge(dst, src)
}
func (m *CreatePollReply) XXX_Size() int {
	return xxx_messageInfo_CreatePollReply.Size(m)
}
func (m *CreatePollReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePollReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePollReply proto.InternalMessageInfo

func (m *CreatePollReply) GetPoll() *Poll {
	if m != nil {
		return m.Poll
	}
	return nil
}

type Option struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PollId               string   `protobuf:"bytes,2,opt,name=pollId,proto3" json:"pollId,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}
func (*Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_poll_0ffb0f04c83eab61, []int{2}
}
func (m *Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Option.Unmarshal(m, b)
}
func (m *Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Option.Marshal(b, m, deterministic)
}
func (dst *Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Option.Merge(dst, src)
}
func (m *Option) XXX_Size() int {
	return xxx_messageInfo_Option.Size(m)
}
func (m *Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Option proto.InternalMessageInfo

func (m *Option) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Option) GetPollId() string {
	if m != nil {
		return m.PollId
	}
	return ""
}

func (m *Option) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type PollRequest struct {
	PollId               string   `protobuf:"bytes,1,opt,name=pollId,proto3" json:"pollId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PollRequest) Reset()         { *m = PollRequest{} }
func (m *PollRequest) String() string { return proto.CompactTextString(m) }
func (*PollRequest) ProtoMessage()    {}
func (*PollRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_poll_0ffb0f04c83eab61, []int{3}
}
func (m *PollRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollRequest.Unmarshal(m, b)
}
func (m *PollRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollRequest.Marshal(b, m, deterministic)
}
func (dst *PollRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollRequest.Merge(dst, src)
}
func (m *PollRequest) XXX_Size() int {
	return xxx_messageInfo_PollRequest.Size(m)
}
func (m *PollRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PollRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PollRequest proto.InternalMessageInfo

func (m *PollRequest) GetPollId() string {
	if m != nil {
		return m.PollId
	}
	return ""
}

type PollReply struct {
	Poll                 *Poll    `protobuf:"bytes,1,opt,name=poll,proto3" json:"poll,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PollReply) Reset()         { *m = PollReply{} }
func (m *PollReply) String() string { return proto.CompactTextString(m) }
func (*PollReply) ProtoMessage()    {}
func (*PollReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_poll_0ffb0f04c83eab61, []int{4}
}
func (m *PollReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollReply.Unmarshal(m, b)
}
func (m *PollReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollReply.Marshal(b, m, deterministic)
}
func (dst *PollReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollReply.Merge(dst, src)
}
func (m *PollReply) XXX_Size() int {
	return xxx_messageInfo_PollReply.Size(m)
}
func (m *PollReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PollReply.DiscardUnknown(m)
}

var xxx_messageInfo_PollReply proto.InternalMessageInfo

func (m *PollReply) GetPoll() *Poll {
	if m != nil {
		return m.Poll
	}
	return nil
}

type Poll struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	CreatorId            string    `protobuf:"bytes,3,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	AllowedUniqueVotes   int32     `protobuf:"varint,4,opt,name=allowedUniqueVotes,proto3" json:"allowedUniqueVotes,omitempty"`
	HasEnded             bool      `protobuf:"varint,5,opt,name=hasEnded,proto3" json:"hasEnded,omitempty"`
	Options              []*Option `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Poll) Reset()         { *m = Poll{} }
func (m *Poll) String() string { return proto.CompactTextString(m) }
func (*Poll) ProtoMessage()    {}
func (*Poll) Descriptor() ([]byte, []int) {
	return fileDescriptor_poll_0ffb0f04c83eab61, []int{5}
}
func (m *Poll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Poll.Unmarshal(m, b)
}
func (m *Poll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Poll.Marshal(b, m, deterministic)
}
func (dst *Poll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Poll.Merge(dst, src)
}
func (m *Poll) XXX_Size() int {
	return xxx_messageInfo_Poll.Size(m)
}
func (m *Poll) XXX_DiscardUnknown() {
	xxx_messageInfo_Poll.DiscardUnknown(m)
}

var xxx_messageInfo_Poll proto.InternalMessageInfo

func (m *Poll) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Poll) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Poll) GetCreatorId() string {
	if m != nil {
		return m.CreatorId
	}
	return ""
}

func (m *Poll) GetAllowedUniqueVotes() int32 {
	if m != nil {
		return m.AllowedUniqueVotes
	}
	return 0
}

func (m *Poll) GetHasEnded() bool {
	if m != nil {
		return m.HasEnded
	}
	return false
}

func (m *Poll) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

type OptionsRequest struct {
	PollId               string   `protobuf:"bytes,1,opt,name=pollId,proto3" json:"pollId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OptionsRequest) Reset()         { *m = OptionsRequest{} }
func (m *OptionsRequest) String() string { return proto.CompactTextString(m) }
func (*OptionsRequest) ProtoMessage()    {}
func (*OptionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_poll_0ffb0f04c83eab61, []int{6}
}
func (m *OptionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptionsRequest.Unmarshal(m, b)
}
func (m *OptionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptionsRequest.Marshal(b, m, deterministic)
}
func (dst *OptionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptionsRequest.Merge(dst, src)
}
func (m *OptionsRequest) XXX_Size() int {
	return xxx_messageInfo_OptionsRequest.Size(m)
}
func (m *OptionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OptionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OptionsRequest proto.InternalMessageInfo

func (m *OptionsRequest) GetPollId() string {
	if m != nil {
		return m.PollId
	}
	return ""
}

type OptionsReply struct {
	Options              []*Option `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OptionsReply) Reset()         { *m = OptionsReply{} }
func (m *OptionsReply) String() string { return proto.CompactTextString(m) }
func (*OptionsReply) ProtoMessage()    {}
func (*OptionsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_poll_0ffb0f04c83eab61, []int{7}
}
func (m *OptionsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptionsReply.Unmarshal(m, b)
}
func (m *OptionsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptionsReply.Marshal(b, m, deterministic)
}
func (dst *OptionsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptionsReply.Merge(dst, src)
}
func (m *OptionsReply) XXX_Size() int {
	return xxx_messageInfo_OptionsReply.Size(m)
}
func (m *OptionsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OptionsReply.DiscardUnknown(m)
}

var xxx_messageInfo_OptionsReply proto.InternalMessageInfo

func (m *OptionsReply) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

type EndPollRequest struct {
	PollId               string   `protobuf:"bytes,1,opt,name=pollId,proto3" json:"pollId,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndPollRequest) Reset()         { *m = EndPollRequest{} }
func (m *EndPollRequest) String() string { return proto.CompactTextString(m) }
func (*EndPollRequest) ProtoMessage()    {}
func (*EndPollRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_poll_0ffb0f04c83eab61, []int{8}
}
func (m *EndPollRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndPollRequest.Unmarshal(m, b)
}
func (m *EndPollRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndPollRequest.Marshal(b, m, deterministic)
}
func (dst *EndPollRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndPollRequest.Merge(dst, src)
}
func (m *EndPollRequest) XXX_Size() int {
	return xxx_messageInfo_EndPollRequest.Size(m)
}
func (m *EndPollRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EndPollRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EndPollRequest proto.InternalMessageInfo

func (m *EndPollRequest) GetPollId() string {
	if m != nil {
		return m.PollId
	}
	return ""
}

func (m *EndPollRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type EndPollReply struct {
	Poll                 *Poll    `protobuf:"bytes,1,opt,name=poll,proto3" json:"poll,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndPollReply) Reset()         { *m = EndPollReply{} }
func (m *EndPollReply) String() string { return proto.CompactTextString(m) }
func (*EndPollReply) ProtoMessage()    {}
func (*EndPollReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_poll_0ffb0f04c83eab61, []int{9}
}
func (m *EndPollReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndPollReply.Unmarshal(m, b)
}
func (m *EndPollReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndPollReply.Marshal(b, m, deterministic)
}
func (dst *EndPollReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndPollReply.Merge(dst, src)
}
func (m *EndPollReply) XXX_Size() int {
	return xxx_messageInfo_EndPollReply.Size(m)
}
func (m *EndPollReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EndPollReply.DiscardUnknown(m)
}

var xxx_messageInfo_EndPollReply proto.InternalMessageInfo

func (m *EndPollReply) GetPoll() *Poll {
	if m != nil {
		return m.Poll
	}
	return nil
}

func init() {
	proto.RegisterType((*CreatePollRequest)(nil), "pollpb.CreatePollRequest")
	proto.RegisterType((*CreatePollReply)(nil), "pollpb.CreatePollReply")
	proto.RegisterType((*Option)(nil), "pollpb.Option")
	proto.RegisterType((*PollRequest)(nil), "pollpb.PollRequest")
	proto.RegisterType((*PollReply)(nil), "pollpb.PollReply")
	proto.RegisterType((*Poll)(nil), "pollpb.Poll")
	proto.RegisterType((*OptionsRequest)(nil), "pollpb.OptionsRequest")
	proto.RegisterType((*OptionsReply)(nil), "pollpb.OptionsReply")
	proto.RegisterType((*EndPollRequest)(nil), "pollpb.EndPollRequest")
	proto.RegisterType((*EndPollReply)(nil), "pollpb.EndPollReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PollsClient is the client API for Polls service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PollsClient interface {
	Create(ctx context.Context, in *CreatePollRequest, opts ...grpc.CallOption) (*CreatePollReply, error)
	Poll(ctx context.Context, in *PollRequest, opts ...grpc.CallOption) (*PollReply, error)
	Options(ctx context.Context, in *OptionsRequest, opts ...grpc.CallOption) (*OptionsReply, error)
	End(ctx context.Context, in *EndPollRequest, opts ...grpc.CallOption) (*EndPollReply, error)
}

type pollsClient struct {
	cc *grpc.ClientConn
}

func NewPollsClient(cc *grpc.ClientConn) PollsClient {
	return &pollsClient{cc}
}

func (c *pollsClient) Create(ctx context.Context, in *CreatePollRequest, opts ...grpc.CallOption) (*CreatePollReply, error) {
	out := new(CreatePollReply)
	err := c.cc.Invoke(ctx, "/pollpb.Polls/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pollsClient) Poll(ctx context.Context, in *PollRequest, opts ...grpc.CallOption) (*PollReply, error) {
	out := new(PollReply)
	err := c.cc.Invoke(ctx, "/pollpb.Polls/Poll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pollsClient) Options(ctx context.Context, in *OptionsRequest, opts ...grpc.CallOption) (*OptionsReply, error) {
	out := new(OptionsReply)
	err := c.cc.Invoke(ctx, "/pollpb.Polls/Options", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pollsClient) End(ctx context.Context, in *EndPollRequest, opts ...grpc.CallOption) (*EndPollReply, error) {
	out := new(EndPollReply)
	err := c.cc.Invoke(ctx, "/pollpb.Polls/End", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PollsServer is the server API for Polls service.
type PollsServer interface {
	Create(context.Context, *CreatePollRequest) (*CreatePollReply, error)
	Poll(context.Context, *PollRequest) (*PollReply, error)
	Options(context.Context, *OptionsRequest) (*OptionsReply, error)
	End(context.Context, *EndPollRequest) (*EndPollReply, error)
}

func RegisterPollsServer(s *grpc.Server, srv PollsServer) {
	s.RegisterService(&_Polls_serviceDesc, srv)
}

func _Polls_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePollRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PollsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pollpb.Polls/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PollsServer).Create(ctx, req.(*CreatePollRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Polls_Poll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PollRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PollsServer).Poll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pollpb.Polls/Poll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PollsServer).Poll(ctx, req.(*PollRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Polls_Options_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PollsServer).Options(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pollpb.Polls/Options",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PollsServer).Options(ctx, req.(*OptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Polls_End_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndPollRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PollsServer).End(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pollpb.Polls/End",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PollsServer).End(ctx, req.(*EndPollRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Polls_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pollpb.Polls",
	HandlerType: (*PollsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Polls_Create_Handler,
		},
		{
			MethodName: "Poll",
			Handler:    _Polls_Poll_Handler,
		},
		{
			MethodName: "Options",
			Handler:    _Polls_Options_Handler,
		},
		{
			MethodName: "End",
			Handler:    _Polls_End_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "poll.proto",
}

func init() { proto.RegisterFile("poll.proto", fileDescriptor_poll_0ffb0f04c83eab61) }

var fileDescriptor_poll_0ffb0f04c83eab61 = []byte{
	// 412 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xdd, 0x8a, 0xda, 0x40,
	0x18, 0x75, 0xcc, 0x8f, 0xe6, 0x53, 0x52, 0x9c, 0x8a, 0x4d, 0xa5, 0x17, 0x61, 0xa0, 0x90, 0x9b,
	0x06, 0x51, 0x0a, 0xed, 0x4d, 0x29, 0x14, 0x2f, 0xec, 0x4d, 0x4b, 0xa0, 0xbd, 0x57, 0x67, 0xa0,
	0x81, 0x21, 0x13, 0x93, 0x91, 0xe2, 0xe3, 0xec, 0x9b, 0xec, 0xfb, 0xec, 0x4b, 0x2c, 0x99, 0x49,
	0x4c, 0xb2, 0x66, 0x5d, 0xf7, 0x2e, 0xe7, 0x7c, 0x3f, 0x73, 0xe6, 0x9c, 0x24, 0x00, 0xa9, 0xe0,
	0x3c, 0x4c, 0x33, 0x21, 0x05, 0xb6, 0x8b, 0xe7, 0x74, 0x47, 0xee, 0x10, 0x4c, 0x7e, 0x64, 0x6c,
	0x2b, 0xd9, 0x6f, 0xc1, 0x79, 0xc4, 0x0e, 0x47, 0x96, 0x4b, 0xfc, 0x01, 0x9c, 0x7d, 0x41, 0x8a,
	0x6c, 0x43, 0x3d, 0xe4, 0xa3, 0xc0, 0x89, 0x6a, 0x02, 0x4f, 0xc1, 0x92, 0xb1, 0xe4, 0xcc, 0xeb,
	0xab, 0x8a, 0x06, 0x38, 0x04, 0xbc, 0xe5, 0x5c, 0xfc, 0x67, 0xf4, 0x4f, 0x12, 0x1f, 0x8e, 0xec,
	0xaf, 0x90, 0x2c, 0xf7, 0x0c, 0x1f, 0x05, 0x56, 0xd4, 0x51, 0xc1, 0x01, 0x0c, 0x44, 0x2a, 0x63,
	0x91, 0xe4, 0x9e, 0xe9, 0x1b, 0xc1, 0x68, 0xe9, 0x86, 0x5a, 0x53, 0xf8, 0x4b, 0xd1, 0x51, 0x55,
	0x26, 0x2b, 0x78, 0xd3, 0x94, 0x98, 0xf2, 0x13, 0xf6, 0xc1, 0x2c, 0x9a, 0x95, 0xb6, 0xd1, 0x72,
	0x5c, 0x4d, 0xaa, 0x06, 0x55, 0x21, 0x3f, 0xc1, 0xd6, 0x7b, 0xb0, 0x0b, 0xfd, 0xb8, 0xba, 0x45,
	0x3f, 0xa6, 0x78, 0x06, 0xea, 0xf2, 0x1b, 0x5a, 0xea, 0x2f, 0x11, 0xf6, 0x60, 0xb0, 0x17, 0x89,
	0x64, 0x89, 0x54, 0xaa, 0x9d, 0xa8, 0x82, 0xe4, 0x23, 0x8c, 0x9a, 0xee, 0xd4, 0x0b, 0x50, 0x73,
	0x01, 0xf9, 0x04, 0xce, 0x6b, 0x14, 0xde, 0x23, 0x30, 0x0b, 0x78, 0x21, 0xb0, 0xdb, 0xdf, 0x56,
	0x26, 0xc6, 0xd3, 0x4c, 0xba, 0xdd, 0x37, 0x9f, 0x75, 0x7f, 0x0e, 0xc3, 0x7f, 0xdb, 0x7c, 0x9d,
	0x50, 0x46, 0x3d, 0xcb, 0x47, 0xc1, 0x30, 0x3a, 0xe3, 0x66, 0x32, 0xf6, 0xf5, 0x64, 0x02, 0x70,
	0x35, 0x95, 0xbf, 0xe4, 0xcd, 0x17, 0x18, 0x9f, 0x3b, 0x0b, 0x7b, 0x1a, 0x67, 0xa0, 0xeb, 0x67,
	0x7c, 0x07, 0x77, 0x9d, 0xd0, 0x1b, 0xfc, 0x2f, 0xf8, 0x63, 0xce, 0xb2, 0x3a, 0x58, 0x8d, 0xc8,
	0x02, 0xc6, 0xe7, 0x0d, 0x37, 0x45, 0xb3, 0x7c, 0x40, 0x60, 0x15, 0x30, 0xc7, 0xdf, 0xc0, 0xd6,
	0xef, 0x1e, 0x7e, 0x5f, 0xf5, 0x5d, 0x7c, 0x2e, 0xf3, 0x77, 0x5d, 0xa5, 0x94, 0x9f, 0x48, 0x0f,
	0x2f, 0xca, 0x8c, 0xdf, 0xb6, 0x4e, 0x29, 0xe7, 0x26, 0x6d, 0x52, 0x4f, 0x7c, 0x85, 0x41, 0xe9,
	0x14, 0x9e, 0xb5, 0x3d, 0xa9, 0x4c, 0x9e, 0x4f, 0x2f, 0x78, 0x3d, 0xfa, 0x19, 0x8c, 0x75, 0x42,
	0xeb, 0xb1, 0xb6, 0x6f, 0xf5, 0x58, 0xd3, 0x0d, 0xd2, 0xdb, 0xd9, 0xea, 0x97, 0xb0, 0x7a, 0x0c,
	0x00, 0x00, 0xff, 0xff, 0xcc, 0x4d, 0x79, 0xda, 0x20, 0x04, 0x00, 0x00,
}

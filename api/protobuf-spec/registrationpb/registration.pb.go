// Code generated by protoc-gen-go. DO NOT EDIT.
// source: registration.proto

package registrationpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterVoterRequest struct {
	ExternalId           string   `protobuf:"bytes,1,opt,name=externalId,proto3" json:"externalId,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterVoterRequest) Reset()         { *m = RegisterVoterRequest{} }
func (m *RegisterVoterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterVoterRequest) ProtoMessage()    {}
func (*RegisterVoterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_registration_7d7d54da1944c786, []int{0}
}
func (m *RegisterVoterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterVoterRequest.Unmarshal(m, b)
}
func (m *RegisterVoterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterVoterRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterVoterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterVoterRequest.Merge(dst, src)
}
func (m *RegisterVoterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterVoterRequest.Size(m)
}
func (m *RegisterVoterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterVoterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterVoterRequest proto.InternalMessageInfo

func (m *RegisterVoterRequest) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *RegisterVoterRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type RegisterVoterReply struct {
	Voter                *Voter   `protobuf:"bytes,1,opt,name=voter,proto3" json:"voter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterVoterReply) Reset()         { *m = RegisterVoterReply{} }
func (m *RegisterVoterReply) String() string { return proto.CompactTextString(m) }
func (*RegisterVoterReply) ProtoMessage()    {}
func (*RegisterVoterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_registration_7d7d54da1944c786, []int{1}
}
func (m *RegisterVoterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterVoterReply.Unmarshal(m, b)
}
func (m *RegisterVoterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterVoterReply.Marshal(b, m, deterministic)
}
func (dst *RegisterVoterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterVoterReply.Merge(dst, src)
}
func (m *RegisterVoterReply) XXX_Size() int {
	return xxx_messageInfo_RegisterVoterReply.Size(m)
}
func (m *RegisterVoterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterVoterReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterVoterReply proto.InternalMessageInfo

func (m *RegisterVoterReply) GetVoter() *Voter {
	if m != nil {
		return m.Voter
	}
	return nil
}

type Voter struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExternalId           string   `protobuf:"bytes,2,opt,name=externalId,proto3" json:"externalId,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	CanVote              bool     `protobuf:"varint,4,opt,name=canVote,proto3" json:"canVote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Voter) Reset()         { *m = Voter{} }
func (m *Voter) String() string { return proto.CompactTextString(m) }
func (*Voter) ProtoMessage()    {}
func (*Voter) Descriptor() ([]byte, []int) {
	return fileDescriptor_registration_7d7d54da1944c786, []int{2}
}
func (m *Voter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Voter.Unmarshal(m, b)
}
func (m *Voter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Voter.Marshal(b, m, deterministic)
}
func (dst *Voter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Voter.Merge(dst, src)
}
func (m *Voter) XXX_Size() int {
	return xxx_messageInfo_Voter.Size(m)
}
func (m *Voter) XXX_DiscardUnknown() {
	xxx_messageInfo_Voter.DiscardUnknown(m)
}

var xxx_messageInfo_Voter proto.InternalMessageInfo

func (m *Voter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Voter) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Voter) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Voter) GetCanVote() bool {
	if m != nil {
		return m.CanVote
	}
	return false
}

func init() {
	proto.RegisterType((*RegisterVoterRequest)(nil), "registrationpb.RegisterVoterRequest")
	proto.RegisterType((*RegisterVoterReply)(nil), "registrationpb.RegisterVoterReply")
	proto.RegisterType((*Voter)(nil), "registrationpb.Voter")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RegistrationClient is the client API for Registration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistrationClient interface {
	RegisterVoter(ctx context.Context, in *RegisterVoterRequest, opts ...grpc.CallOption) (*RegisterVoterReply, error)
}

type registrationClient struct {
	cc *grpc.ClientConn
}

func NewRegistrationClient(cc *grpc.ClientConn) RegistrationClient {
	return &registrationClient{cc}
}

func (c *registrationClient) RegisterVoter(ctx context.Context, in *RegisterVoterRequest, opts ...grpc.CallOption) (*RegisterVoterReply, error) {
	out := new(RegisterVoterReply)
	err := c.cc.Invoke(ctx, "/registrationpb.Registration/RegisterVoter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegistrationServer is the server API for Registration service.
type RegistrationServer interface {
	RegisterVoter(context.Context, *RegisterVoterRequest) (*RegisterVoterReply, error)
}

func RegisterRegistrationServer(s *grpc.Server, srv RegistrationServer) {
	s.RegisterService(&_Registration_serviceDesc, srv)
}

func _Registration_RegisterVoter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterVoterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServer).RegisterVoter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registrationpb.Registration/RegisterVoter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServer).RegisterVoter(ctx, req.(*RegisterVoterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Registration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "registrationpb.Registration",
	HandlerType: (*RegistrationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterVoter",
			Handler:    _Registration_RegisterVoter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "registration.proto",
}

func init() { proto.RegisterFile("registration.proto", fileDescriptor_registration_7d7d54da1944c786) }

var fileDescriptor_registration_7d7d54da1944c786 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x4a, 0x4d, 0xcf,
	0x2c, 0x2e, 0x29, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x43, 0x16, 0x2b, 0x48, 0x52, 0x0a, 0xe2, 0x12, 0x09, 0x02, 0x8b, 0xa4, 0x16, 0x85, 0xe5, 0x97,
	0xa4, 0x16, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xc9, 0x71, 0x71, 0xa5, 0x56, 0x94,
	0xa4, 0x16, 0xe5, 0x25, 0xe6, 0x78, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x21, 0x89,
	0x08, 0x49, 0x71, 0x71, 0x94, 0x16, 0x83, 0x38, 0xb9, 0xa9, 0x12, 0x4c, 0x60, 0x59, 0x38, 0x5f,
	0xc9, 0x91, 0x4b, 0x08, 0xcd, 0xcc, 0x82, 0x9c, 0x4a, 0x21, 0x6d, 0x2e, 0xd6, 0x32, 0x10, 0x0f,
	0x6c, 0x18, 0xb7, 0x91, 0xa8, 0x1e, 0xaa, 0x4b, 0xf4, 0x20, 0x4a, 0x21, 0x6a, 0x94, 0x72, 0xb9,
	0x58, 0xc1, 0x7c, 0x21, 0x3e, 0x2e, 0xa6, 0x4c, 0x98, 0xfd, 0x4c, 0x99, 0x29, 0x68, 0xee, 0x62,
	0xc2, 0xeb, 0x2e, 0x66, 0x54, 0x77, 0x09, 0x49, 0x70, 0xb1, 0x27, 0x27, 0xe6, 0x81, 0xcc, 0x95,
	0x60, 0x51, 0x60, 0xd4, 0xe0, 0x08, 0x82, 0x71, 0x8d, 0xb2, 0xb9, 0x78, 0x82, 0x90, 0x5c, 0x23,
	0x14, 0xcd, 0xc5, 0x8b, 0xe2, 0x03, 0x21, 0x15, 0x74, 0xd7, 0x62, 0x0b, 0x34, 0x29, 0x25, 0x02,
	0xaa, 0x0a, 0x72, 0x2a, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0x31, 0x61, 0x0c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0x08, 0x32, 0x89, 0x96, 0x9f, 0x01, 0x00, 0x00,
}

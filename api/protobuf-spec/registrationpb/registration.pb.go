// Code generated by protoc-gen-go. DO NOT EDIT.
// source: registration.proto

package registrationpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterUserRequest struct {
	ExternalId           string   `protobuf:"bytes,1,opt,name=externalId,proto3" json:"externalId,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserRequest) Reset()         { *m = RegisterUserRequest{} }
func (m *RegisterUserRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterUserRequest) ProtoMessage()    {}
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_registration_85c5c7eb5f51872b, []int{0}
}
func (m *RegisterUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserRequest.Unmarshal(m, b)
}
func (m *RegisterUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserRequest.Merge(dst, src)
}
func (m *RegisterUserRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterUserRequest.Size(m)
}
func (m *RegisterUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserRequest proto.InternalMessageInfo

func (m *RegisterUserRequest) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *RegisterUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type RegisterUserReply struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserReply) Reset()         { *m = RegisterUserReply{} }
func (m *RegisterUserReply) String() string { return proto.CompactTextString(m) }
func (*RegisterUserReply) ProtoMessage()    {}
func (*RegisterUserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_registration_85c5c7eb5f51872b, []int{1}
}
func (m *RegisterUserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserReply.Unmarshal(m, b)
}
func (m *RegisterUserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserReply.Marshal(b, m, deterministic)
}
func (dst *RegisterUserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserReply.Merge(dst, src)
}
func (m *RegisterUserReply) XXX_Size() int {
	return xxx_messageInfo_RegisterUserReply.Size(m)
}
func (m *RegisterUserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserReply proto.InternalMessageInfo

func (m *RegisterUserReply) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExternalId           string   `protobuf:"bytes,2,opt,name=externalId,proto3" json:"externalId,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	CanVote              bool     `protobuf:"varint,4,opt,name=canVote,proto3" json:"canVote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_registration_85c5c7eb5f51872b, []int{2}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetCanVote() bool {
	if m != nil {
		return m.CanVote
	}
	return false
}

func init() {
	proto.RegisterType((*RegisterUserRequest)(nil), "registrationpb.RegisterUserRequest")
	proto.RegisterType((*RegisterUserReply)(nil), "registrationpb.RegisterUserReply")
	proto.RegisterType((*User)(nil), "registrationpb.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RegistrationClient is the client API for Registration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistrationClient interface {
	RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserReply, error)
}

type registrationClient struct {
	cc *grpc.ClientConn
}

func NewRegistrationClient(cc *grpc.ClientConn) RegistrationClient {
	return &registrationClient{cc}
}

func (c *registrationClient) RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserReply, error) {
	out := new(RegisterUserReply)
	err := c.cc.Invoke(ctx, "/registrationpb.Registration/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegistrationServer is the server API for Registration service.
type RegistrationServer interface {
	RegisterUser(context.Context, *RegisterUserRequest) (*RegisterUserReply, error)
}

func RegisterRegistrationServer(s *grpc.Server, srv RegistrationServer) {
	s.RegisterService(&_Registration_serviceDesc, srv)
}

func _Registration_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registrationpb.Registration/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServer).RegisterUser(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Registration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "registrationpb.Registration",
	HandlerType: (*RegistrationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _Registration_RegisterUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "registration.proto",
}

func init() { proto.RegisterFile("registration.proto", fileDescriptor_registration_85c5c7eb5f51872b) }

var fileDescriptor_registration_85c5c7eb5f51872b = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x41, 0x4b, 0x87, 0x30,
	0x18, 0xc6, 0x73, 0x49, 0xfd, 0x7b, 0x0b, 0xa1, 0xb7, 0x0e, 0xc3, 0x43, 0xd8, 0xba, 0x78, 0xf2,
	0x60, 0xe7, 0x3e, 0x40, 0xc7, 0x06, 0x45, 0x57, 0xcd, 0x97, 0x1a, 0x2c, 0xb7, 0xb6, 0x09, 0xf9,
	0xed, 0xc3, 0x85, 0xa1, 0x12, 0x1e, 0x7f, 0xcf, 0x1e, 0x9e, 0xfd, 0xd8, 0x00, 0x1d, 0xbd, 0x2b,
	0x1f, 0x5c, 0x13, 0x94, 0xe9, 0x2b, 0xeb, 0x4c, 0x30, 0x98, 0x2d, 0x33, 0xdb, 0x8a, 0x27, 0xb8,
	0x92, 0x31, 0x21, 0xf7, 0xec, 0xc9, 0x49, 0xfa, 0x1a, 0xc8, 0x07, 0xbc, 0x01, 0xa0, 0xef, 0x40,
	0xae, 0x6f, 0xf4, 0x63, 0xc7, 0x93, 0x22, 0x29, 0xcf, 0xe4, 0x22, 0xc1, 0x1c, 0x0e, 0x83, 0x9f,
	0xe0, 0x93, 0x38, 0x8b, 0xa7, 0x7f, 0x2c, 0x1e, 0xe0, 0x72, 0x3d, 0x69, 0xf5, 0x88, 0x25, 0xa4,
	0x53, 0x21, 0x4e, 0x9d, 0xd7, 0xd7, 0xd5, 0x5a, 0xa3, 0x8a, 0xc5, 0xd8, 0x10, 0x1a, 0xd2, 0x89,
	0x30, 0x03, 0xa6, 0xe6, 0xab, 0x99, 0xea, 0x36, 0x4a, 0x6c, 0x57, 0xe9, 0x78, 0xad, 0x84, 0x1c,
	0x4e, 0xdf, 0x9a, 0xfe, 0xc5, 0x04, 0xe2, 0x69, 0x91, 0x94, 0x07, 0x39, 0x63, 0xfd, 0x01, 0x17,
	0x72, 0xa1, 0x82, 0xaf, 0x33, 0xff, 0xca, 0xe3, 0xdd, 0xd6, 0xf4, 0x9f, 0xd7, 0xca, 0x6f, 0xf7,
	0x4b, 0x56, 0x8f, 0xe2, 0xa8, 0x3d, 0x89, 0x1f, 0x70, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x8f,
	0x36, 0xa1, 0x81, 0x96, 0x01, 0x00, 0x00,
}
